<?xml version="1.0" encoding="utf-8"?>
<root xmlns:android="http://schemas.android.com/apk/res/android" 
      xmlns:tools="http://schemas.android.com/tools">

  <init>
    <setStringFromProperty result="PackageName" 
                           ini="Engine" 
                           section="/Script/AndroidRuntimeSettings.AndroidRuntimeSettings" 
                           property="PackageName" 
                           default=""/>
  </init>

  <prebuildCopies>
    <copyFile src="$S(PluginDir)/../../../../Build/Android/google-services.json" 
              dst="$S(BuildDir)/gradle/app/google-services.json"/>
  </prebuildCopies>
  
  <androidManifestUpdates>
    <addPermission android:name="android.permission.INTERNET" />
  </androidManifestUpdates>
  
	<AARImports>
    <insertValue value="com.google.firebase,firebase-core,11.8.0" />
    <insertNewline/>

    <insertValue value="com.google.firebase,firebase-auth,11.8.0" />
    <insertNewline/>
  </AARImports>

  <buildGradleAdditions>
    <insertValue value="apply plugin: 'com.google.gms.google-services'"/>
    <insertNewline/>
  </buildGradleAdditions>

  <buildscriptGradleAdditions>
    <insert>
      dependencies
      {
        classpath 'com.google.gms:google-services:4.0.0'
      }
    </insert>
  </buildscriptGradleAdditions>
  
  

  <gameActivityImportAdditions>
    <insertValue value="import $S(PackageName).R;" />
    <insertNewline/>

    <insert>
      import android.support.annotation.NonNull;

      import com.google.android.gms.auth.api.signin.GoogleSignIn;
      import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
      import com.google.android.gms.auth.api.signin.GoogleSignInClient;
      import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
      import com.google.android.gms.tasks.OnCompleteListener;
      import com.google.android.gms.tasks.Task;
      import com.google.android.gms.common.api.ApiException;

      import com.google.firebase.auth.AuthCredential;
      import com.google.firebase.auth.AuthResult;
      import com.google.firebase.auth.FirebaseAuth;
      import com.google.firebase.auth.GoogleAuthProvider;
    </insert>
  </gameActivityImportAdditions>

  
  
  
  
  <gameActivityClassAdditions>
    <insert>
      private final int GOOGLE_SIGNIN_RC = 9001;
      
      private FirebaseAuth Auth;
      private GoogleSignInClient SignInClient;
      
      private void FirebaseAuthWithGoogle(GoogleSignInAccount SignInAccount)
      {
          AuthCredential Credential = GoogleAuthProvider.getCredential(SignInAccount.getIdToken(), null);
          Auth.signInWithCredential(Credential).addOnCompleteListener(this, new OnCompleteListener&lt;AuthResult&gt;()
          {
              @Override
              public void onComplete(@NonNull Task&lt;AuthResult&gt; Task)
              {
                  if (Task.isSuccessful())
                  {
                      // Sign in success, update UI with the signed-in user's information
                  }
                  else 
                  {
                      // If sign in fails, display a message to the user.
                  }
              }
          });
      }
      
      private void AndroidThunkJava_GoogleSignIn()
      {
          Intent SignInIntent = SignInClient.getSignInIntent();
          startActivityForResult(SignInIntent, GOOGLE_SIGNIN_RC);
      }

      private void AndroidThunkJava_GoogleSignOut()
      {
          Auth.signOut();

          // Google sign out
          SignInClient.signOut().addOnCompleteListener(this, new OnCompleteListener&lt;Void&gt;()
          {
              @Override
              public void onComplete(@NonNull Task&lt;Void&gt; Task)
              {
                  // Complete
              }
          });
      }

      private void AndroidThunkJava_GoogleRevokeAccess()
      {
          // Firebase sign out
          Auth.signOut();

          // Google revoke access
          SignInClient.revokeAccess().addOnCompleteListener(this, new OnCompleteListener&lt;Void&gt;()
          {
              @Override
              public void onComplete(@NonNull Task&lt;Void&gt; Task)
              {
                  // Complete
              }
          });
      }
      
    </insert>
  </gameActivityClassAdditions>

  
  
  
  
  
  
  
  
  <gameActivityOnCreateAdditions>
    <insert>
      GoogleSignInOptions SignInOptions = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                                          .requestIdToken(getString(R.string.default_web_client_id))
                                          .requestEmail()
                                          .build();
      SignInClient = GoogleSignIn.getClient(this, SignInOptions);
      Auth = FirebaseAuth.getInstance();
    </insert>
  </gameActivityOnCreateAdditions>

  
  
  
  
  
  
  
  <gameActivityOnActivityResultAdditions>
    <insert>
      if (requestCode == GOOGLE_SIGNIN_RC)
      {
          Task&lt;GoogleSignInAccount&gt; Task = GoogleSignIn.getSignedInAccountFromIntent(data);
          try
          {
              GoogleSignInAccount SignInAccount = Task.getResult(ApiException.class);
              FirebaseAuthWithGoogle(SignInAccount);
          }
          catch (ApiException e)
          {
          }
      }
    </insert>
  </gameActivityOnActivityResultAdditions>

</root>